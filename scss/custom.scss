// Custom.scss

@font-face {
    src: url("fonts/sofia_pro/sofia_pro_regular-webfont.woff2") format("woff2");

    font-family: "Sofia Pro";
    font-weight: 400;
}

@font-face {
    src: url("fonts/sofia_pro/sofia_pro_bold-webfont.woff2") format("woff2");

    font-family: "Sofia Pro";
    font-weight: 500;
}

@font-face {
    src: url("fonts/aldo_ot_cev/alda_ot_cev_regular-webfont.woff2") format("woff2");

    font-family: "Aldo OT CEV";
    font-weight: 400;
}

@font-face {
    src: url("fonts/aldo_ot_cev/alda_ot_cev_bold-webfont.woff2") format("woff2");

    font-family: "Aldo OT CEV";
    font-weight: 500;
}

// do the rest

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "../bootstrap/scss/functions";

// 2. Include any default variable overrides here
$primary: #FFD744;
$secondary: #009278;
$blue: #092047;
$label: #606060;

$bs-tertiary-color: #FDF9F1;
$bs-info-color: #EBF7FD;

$font-family-base: "Sofia Pro", sans-serif;

// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
@import "../bootstrap/scss/variables";
@import "../bootstrap/scss/variables-dark";

// 4. Include any default map overrides here

// Create your own map
$custom-colors: (
  "tertiary": $bs-tertiary-color,
  "info": $bs-info-color
);

// Merge the maps
$theme-colors: map-merge($theme-colors, $custom-colors);

// 5. Include remainder of required parts
@import "../bootstrap/scss/maps";
@import "../bootstrap/scss/mixins";
@import "../bootstrap/scss/root";

// 6. Optionally include any other parts as needed
@import "../bootstrap/scss/utilities";
@import "../bootstrap/scss/reboot";
@import "../bootstrap/scss/type";
@import "../bootstrap/scss/images";
@import "../bootstrap/scss/containers";
@import "../bootstrap/scss/grid";
@import "../bootstrap/scss/helpers";

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import "../bootstrap/scss/utilities/api";

@import "../bootstrap/scss/bootstrap";

// custom mixins

@mixin gradient($direction, $list) { 
    background: -webkit-linear-gradient($direction, $list);
    background: -moz-linear-gradient($direction, $list);
    background: -o-linear-gradient($direction, $list);
    background: linear-gradient($direction, $list);  
  }

// 2. Add additional custom code here

header {
    #logo {
        height: 41px;
    }
}

footer {
    background: $blue;
}

h1, h2, h3, h4, h4 {
    font-weight: 500;

    &.display {
        font-family: "Aldo OT CEV", serif;
        font-weight: 400;
    }
}

$bg-top-half-info: $bs-info-color 0%, $bs-info-color 40%, #fff 40%, #fff 100%;
$bg-top-half-tertiary: $bs-tertiary-color 0%, $bs-tertiary-color 40%, #fff 40%, #fff 100%;

.bg-top-half-info {
    @include gradient(top, $bg-top-half-info);
}

.bg-top-half-tertiary {
    @include gradient(top, $bg-top-half-tertiary);
}

.card-img-fill {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.card-img-fill-sm {
    width: 100%;
    height: 12.5rem;
    object-fit: cover;
}

.donut {
    width: 8rem; 
    height: 8rem;
    border-radius: 50%;

    background: conic-gradient(
      $secondary 0deg 72deg,
      $primary 72deg 360deg
    );

    display: flex;
    align-items: center;
    justify-content: center;

    .hole {
        width: 6rem; 
        height: 6rem;
        border-radius: 50%;
        background: #fff;
    } 
}

.hex {
    width: 4rem;
    display: inline-block;
    color: $primary;
    position:relative;
  
    &:before {
        content: "";
        display: block;
        background:currentColor;
        padding-top: 90%;
        clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
    }

    .quo {
        color: #000;
        position: absolute;
        margin-left: 36%;
        top: 0;
        font-size: 3rem;
    }
}

.action-item {
    .action-flag {
        width: 2rem;
        margin-left: 0.75rem;
    }

    .checkbox-xl {
        scale: 2.5;
        //accent-color: $secondary
    }
}

.text-label {
    color: $label;
}

.bg-label {
    background-color: #D9D9D9;
}

.yt-video {
    height: calc(80vw * 0.20 + 10.5rem);
    // would be better to lock the aspect ratio?
}